name: Build
on: [push, release]
jobs:
  build:
    strategy:
      matrix:
        target:
          - name: Linux
            os: ubuntu-latest
          - name: Win32
            os: windows-latest
    runs-on: ${{ matrix.target.os }}
    steps:
    - name: Install LLVM
      if: matrix.target.os == 'windows-latest'
      run: choco install llvm
    - name: Install Ninja
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo apt-get install ninja-build
    - uses: ilammy/msvc-dev-cmd@v1.0.1
      with:
        arch: x86
    - uses: actions/setup-python@v1
    - uses: mihails-strasuns/setup-dlang@v0.5.0
      with:
        compiler: dmd-2.091.0
    - name: Install Meson
      run: pip install meson
    - uses: actions/checkout@v1
    - name: Configure build
      run: meson build
      env:
        Path: '${{ env.Path }};C:/Program Files/LLVM/bin'
    - name: Upload Meson error log
      uses: actions/upload-artifact@v2-preview
      if: failure()
      with:
        name: meson-log.txt
        path: build/meson-logs/meson-log.txt
    - name: Compile
      run: ninja -C build
    - name: Package
      run: python ci_package.py CheeseCutter-v2.9-CC-${{ matrix.target.name }}
    - name: Upload CI artifact
      uses: actions/upload-artifact@v2-preview
      if: github.event_name != 'release'
      with:
        name: CheeseCutter-v2.9-CC-${{ matrix.target.name }}-DEV
        path: CheeseCutter
    - uses: JasonEtco/upload-to-release@v0.1.1
      if: github.event_name == 'release'
      with:
        args: CheeseCutter-v2.9-CC-${{ matrix.target.name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
